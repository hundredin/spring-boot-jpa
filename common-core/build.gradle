jar {
    baseName = 'common-core'
    version = '0.0.1-SNAPSHOT'
}

buildscript {
    ext {
        springBootVersion = "${springBootVersion}"
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter"
    compile "org.springframework:spring-web"
    compile "org.springframework:spring-jdbc"
    compile "org.springframework:spring-orm"
    compile "org.springframework:spring-aspects"
    compile "org.springframework.data:spring-data-jpa:2.1.3.RELEASE"

    compile "org.hibernate:hibernate-core:${hibernateVersion}"
    compile "org.hibernate:hibernate-entitymanager:${hibernateVersion}"
    compile "com.querydsl:querydsl-jpa:${queryDslVersion}"
    compile "com.querydsl:querydsl-apt:${queryDslVersion}"
    compile 'org.projectlombok:lombok:1.16.10'
    compile 'org.aspectj:aspectjweaver:1.8.13'
    compile 'joda-time:joda-time:2.9.4'
    compile 'org.apache.commons:commons-lang3:3.4'
    compile "org.apache.httpcomponents:httpclient:4.5.7"
    runtime 'com.h2database:h2:1.4.192'

    compile "mysql:mysql-connector-java:5.1.40"
    compile "com.zaxxer:HikariCP:3.2.0"

    compile "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-hibernate5:${jacksonVersion}"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"
}

// for QueryDSL
sourceSets {
    generated {
        java {
            srcDirs = ['src/main/generated']
        }
    }
}

task generateQueryDSL(type: JavaCompile, group: 'build') {
    source = sourceSets.main.java
    classpath = configurations.compile
    options.compilerArgs = [
            "-proc:only",
            "-processor", "com.querydsl.apt.jpa.JPAAnnotationProcessor"
    ]
    destinationDir = sourceSets.generated.java.srcDirs.iterator().next()
}

compileJava {
    dependsOn generateQueryDSL
    source generateQueryDSL.destinationDir
}

compileGeneratedJava {
    dependsOn generateQueryDSL
    options.warnings = false
    classpath += sourceSets.main.runtimeClasspath
}

clean {
    delete sourceSets.generated.java.srcDirs
}

idea {
    module {
        sourceDirs += file('src/main/generated')
    }
}

bootJar {
    enabled = false
}
