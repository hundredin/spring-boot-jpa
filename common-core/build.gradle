jar {
    baseName = 'common-core'
    version = '0.0.1-SNAPSHOT'
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter:${springBootVersion}"
    compile "org.springframework:spring-jdbc:${springVersion}"
    compile "org.springframework:spring-orm:${springVersion}"
    compile "org.springframework:spring-aspects:${springVersion}"
    compile 'org.springframework.data:spring-data-jpa:1.10.3.RELEASE'
    compile "org.hibernate:hibernate-core:${hibernateVersion}"
    compile "org.hibernate:hibernate-entitymanager:${hibernateVersion}"
    compile 'com.querydsl:querydsl-jpa:4.1.4'
    compile 'com.querydsl:querydsl-apt:4.1.4'
    compile 'org.projectlombok:lombok:1.16.10'
    compile 'org.aspectj:aspectjweaver:1.8.9'
    compile 'joda-time:joda-time:2.9.4'
    compile 'org.apache.commons:commons-lang3:3.4'
    runtime 'com.h2database:h2:1.4.192'
    testCompile 'com.github.springtestdbunit:spring-test-dbunit:1.3.0'
    testCompile 'org.dbunit:dbunit:2.5.3'
}

// for QueryDSL
sourceSets {
    generated {
        java {
            srcDirs = ['src/main/generated']
        }
    }
}

task generateQueryDSL(type: JavaCompile, group: 'build') {
    source = sourceSets.main.java
    classpath = configurations.compile
    options.compilerArgs = [
            "-proc:only",
            "-processor", "com.querydsl.apt.jpa.JPAAnnotationProcessor"
    ]
    destinationDir = sourceSets.generated.java.srcDirs.iterator().next()
}

compileJava {
    dependsOn generateQueryDSL
    source generateQueryDSL.destinationDir
}

compileGeneratedJava {
    dependsOn generateQueryDSL
    options.warnings = false
    classpath += sourceSets.main.runtimeClasspath
}

clean {
    delete sourceSets.generated.java.srcDirs
}

idea {
    module {
        sourceDirs += file('src/main/generated')
    }
}
bootRepackage {
    enabled = false
}